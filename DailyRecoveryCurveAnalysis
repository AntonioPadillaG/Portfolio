-- ========================================
-- Daily Recovery Curve Analysis by Campus Segment (Factoring Model)
-- Author: Antonio Padilla
-- Objective: Evaluate the daily recovery performance (paid/expected)
--            by campus segment, vintage, and product type (Factoring).
-- ========================================

-- You can adapt this logic for Colombia or Ecuador by modifying the segment thresholds.
-- CURRENT_DATE will reflect the execution day; change manually for reproducibility.

WITH purchase_segmented AS (
    SELECT  
        r.campus_id,
        r.campus_name,
        r.country,
        r.harvesting_period AS vintage,
        r.purchase_price_w_adjustments,
        r.total_collection_w_adjustments,
        r.cutoff_date,
        r.campus_product_type,

        -- Mexico Segment Thresholds
        CASE
            WHEN r.purchase_price_w_adjustments >= 2000000 THEN 'S1'
            WHEN r.purchase_price_w_adjustments >= 1000000 THEN 'S2'
            WHEN r.purchase_price_w_adjustments >= 500000 THEN 'S3'
            ELSE 'S4'
        END AS segment

        -- Uncomment and modify below for Colombia or Ecuador:
        /*
        CASE
            WHEN r.country = 'Colombia' AND r.purchase_price_w_adjustments >= 424000000 THEN 'S1'
            WHEN r.country = 'Colombia' AND r.purchase_price_w_adjustments >= 212000000 THEN 'S2'
            WHEN r.country = 'Colombia' AND r.purchase_price_w_adjustments >= 106000000 THEN 'S3'
            ELSE 'S4'
        END AS segment

        CASE
            WHEN r.country = 'Ecuador' AND r.purchase_price_w_adjustments >= 101364 THEN 'S1'
            WHEN r.country = 'Ecuador' AND r.purchase_price_w_adjustments >= 50682 THEN 'S2'
            WHEN r.country = 'Ecuador' AND r.purchase_price_w_adjustments >= 25340 THEN 'S3'
            ELSE 'S4'
        END AS segment
        */
    FROM mattiwarehouse.collection.dtm_collection r
),

principal AS ( 
    SELECT
        campus_name,
        campus_id,
        vintage,      
        segment,
        cutoff_date,
        country,
        campus_product_type,
        SUM(CASE WHEN vintage = '202409' THEN purchase_price_w_adjustments ELSE 0 END) AS VPCosecha, 
        SUM(CASE WHEN vintage = '202409' THEN total_collection_w_adjustments ELSE 0 END) AS PagadoDia 
    FROM purchase_segmented
    WHERE vintage >= '202409' AND cutoff_date >= '2024-09-01'
    GROUP BY campus_name, campus_id, segment, vintage, cutoff_date, country, campus_product_type
),

aggregated_principal AS (
    SELECT *,
        ROUND(VPCosecha, 2) AS VPCosecha_R,
        ROUND(PagadoDia, 2) AS PagadoDia_R,
        ROUND(CASE WHEN VPCosecha = 0 THEN 0 ELSE COALESCE(PagadoDia, 0) / NULLIF(VPCosecha, 0) * 100 END, 2) AS Curva_Acumulada_AlDia
    FROM principal
    WHERE cutoff_date = CURRENT_DATE
),

membership_payments AS (
    SELECT
        c.campus_id,
        c.name AS campus_name,
        COUNT(DISTINCT r.payment_id) AS num_payments,
        SUM(i.initial_amount) AS initial_amount,
        SUM(i.amount) AS amount,
        i.date_period_period AS harvesting_period,
        i.factoring,
        c.country,
        r.paid_date
    FROM mattiwarehouse.default.dim_receipts r
    INNER JOIN mattiwarehouse.default.dim_campuses c ON c.campus_id = r.campus_id
    INNER JOIN mattiwarehouse.default.dim_invoices i ON i.invoice_id = r.invoice_id
    WHERE r.concept_type IN ('membership')
        AND i.status = 'successful'
        AND i.date_period_period = '202409'
        AND i.factoring IS TRUE
        AND c.country = 'Mexico'
    GROUP BY c.country, c.campus_id, c.name, i.date_period_period, i.factoring, r.paid_date
)

-- Final Join: Recovery calculation per campus
SELECT 
    p.*,
    a.vintage AS vintage_segment,
    a.segment AS segment,
    a.VPCosecha_R,
    a.PagadoDia_R,
    a.Curva_Acumulada_AlDia,
    a.campus_product_type,
    ROUND(CASE WHEN a.VPCosecha_R = 0 THEN 0 ELSE COALESCE(p.amount, 0) / NULLIF(a.VPCosecha_R, 0) * 100 END, 2) AS Curva_Acumulada_Diaria
FROM membership_payments p
LEFT JOIN aggregated_principal a ON p.campus_id = a.campus_id
WHERE campus_product_type = 'factoring';
